# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_visualization_agent
# Time Created: 2025-04-16 16:20:44

def data_visualization(data_raw):
    import pandas as pd
    import numpy as np
    import json
    import plotly.graph_objects as go
    import plotly.io as pio





    # Data cleaning: remove rows where 'Badanie' is missing
    df = data_raw.copy()
    df = df.dropna(subset=['Badanie'])
    # Ensure numeric for relevant columns; fill NaNs with 0
    for col in ['NVAK', 'NVAO', 'VA']:
        df[col] = pd.to_numeric(df[col], errors='coerce').fillna(0)

    # Group by Badanie and sum values
    agg = df.groupby('Badanie')[['NVAK', 'NVAO', 'VA']].sum()
    agg_total = agg[['NVAK', 'NVAO', 'VA']].sum(axis=1)
    mask = agg_total > 0
    agg = agg[mask]
    agg_total = agg_total[mask]

    # Calculate percent contributions
    agg['% NVA-K'] = agg['NVAK'] / agg_total * 100
    agg['% NVA-O'] = agg['NVAO'] / agg_total * 100
    agg['% VA'] = agg['VA'] / agg_total * 100

    # Prepare for plotting
    plot_df = agg[['% NVA-K', '% NVA-O', '% VA']].reset_index()
    plot_df = plot_df.sort_values('Badanie')
    categories = [
        ('% NVA-K', 'NVA-K (kolor ¿ó³ty)', '#FFD700'),
        ('% NVA-O', 'NVA-O (kolor czerwony)', '#E60026'),
        ('% VA', 'VA (kolor zielony)', '#43A047'),
    ]

    fig = go.Figure()
    cum_sums = np.zeros(len(plot_df))
    for cat, label, color in categories:
        values = plot_df[cat].to_numpy()
        fig.add_trace(go.Bar(
            y=plot_df['Badanie'],
            x=values,
            base=cum_sums.copy(),
            orientation='h',
            marker=dict(color=color),
            name=label,
            text=[f'{v:.1f}%' for v in values],
            textposition='inside',
            insidetextanchor='middle',
            hovertemplate=(
                '<b>Badanie:</b> %{y}<br>'
                f'<b>{label}:</b> ' + '%{x:.2f}%<extra></extra>'
            ),
        ))
        cum_sums += values

    fig.update_layout(
        barmode='stack',
        title="Udzia³ kategorii NVA-K, NVA-O i VA w ³¹cznej wartoœci 100% dla ró¿nych Badañ",
        xaxis=dict(title="Procentowy udzia³ (%)", range=[0, 100], ticksuffix='%', showgrid=True, dtick=10),
        yaxis=dict(title="Badanie", categoryorder='array', categoryarray=plot_df['Badanie']),
        legend=dict(
            title="Kategoria",
            orientation="v",
            yanchor="top",
            y=1,
            xanchor="right",
            x=1.0,
        ),
        margin=dict(l=110, r=40, t=80, b=60),
        bargap=0.2,
        height=max(450, 100 + 60 * len(plot_df)),
    )

    fig.update_traces(
        textfont_size=14,
        cliponaxis=False,
        texttemplate='%{text}',
    )

    fig_json = pio.to_json(fig)
    fig_dict = json.loads(fig_json)
    return fig_dict