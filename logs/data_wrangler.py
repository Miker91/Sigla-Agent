# Disclaimer: This function was generated by AI. Please review before using.
# Agent Name: data_wrangling_agent
# Time Created: 2025-04-26 15:44:04

def data_wrangler(data_list):
    import pandas as pd
    import numpy as np
    '''
    Wrangle the data provided in data_list.
    
    data_list: A list of one or more pandas DataFrames containing the raw data to be wrangled.
               If a single DataFrame is passed, it will be converted to a list internally.
               
    Returns:
        A pandas DataFrame with columns:
            - 'Badanie'
            - 'Klasyfikacja'
            - 'Percentage'
        where 'Percentage' is the percent share of each 'Klasyfikacja' value
        within each 'Badanie' group.
    '''


    # 1. Ensure the input is a list. If not, wrap it into a list.
    if not isinstance(data_list, list):
        data_list = [data_list]

    # 2. Concatenate all DataFrames in the list into a single DataFrame.
    #    ignore_index=True to reset the index in the combined DataFrame.
    df = pd.concat(data_list, ignore_index=True)

    # 3. Group by ['Badanie', 'Klasyfikacja'] and count occurrences.
    #    This gives us the raw count of each classification within each study.
    count_df = (
        df
        .groupby(['Badanie', 'Klasyfikacja'])
        .size()
        .reset_index(name='Count')
    )

    # 4. For each 'Badanie', compute the total number of rows (to get the group size).
    total_df = (
        df
        .groupby('Badanie')
        .size()
        .reset_index(name='Total')
    )

    # 5. Merge the counts with the totals on 'Badanie'.
    merged = pd.merge(count_df, total_df, on='Badanie', how='left')

    # 6. Compute the percentage share of each classification within each study.
    #    Multiply by 100 to express as a percentage.
    merged['Percentage'] = (merged['Count'] / merged['Total']) * 100

    # 7. Select and return only the relevant columns.
    result = merged[['Badanie', 'Klasyfikacja', 'Percentage']]

    return result